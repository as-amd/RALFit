INITIAL PLAN (28/10/2015)
-------------------------

Prototype NA solver(s) will be written in "primitive"
Fortran (77 like to make interface to C/C++ easier).

First task - produce software documentation. 
  Required input 
  Required output
  Options
  Thread safe components
  Important - helpful return codes to indicate success
   or type of failure (with diagnosis)

"Deconstruct" ISIS nlls solver to provide a benchmark.

Initial NA solver(s) will include -
  Levenberg-Morrison-Marquardt (Gauss Newton-like).
  Newton (trust-region).
  Quasi-Newton with secant approximations to 2nd-order terms.
  Quasi-Newton with finite-difference approximations to 2nd-order terms?
  Other models? (Higher order?)
  Adaptable models?
  Other globalization strategies?

Formulate test examples
  ISIS set 
  More', Garbow & Hillstrom set
  CUTESst examples?

Write test program(s)
  coverage
  performance

Aim to reproduce ISIS-like behaviour on easy examples, and
superior behaviour for harder problems (non-zero residuals, etc).

Use state-of-the-art parallel linear algebra (LAPACK, SCALAPACK)
Any other use of parallelization? Derivative values and estimates?

Later 
 Add constraint handling -
   simple bounds
   linear constraints
   simple nonlinear constraints
   general nonlinear constraints?
 Attempt at global optimization?
